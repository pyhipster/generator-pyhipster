<%#
 Copyright 2022 the original author or authors from the PyHipster project.

 This file is part of the PyHipster project, see https://github.com/sudeephazra/generator-pyhipster
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>

from domain.User import User
from domain.Authority import Authority
from WebSerializer import ma
from marshmallow_sqlalchemy import auto_field


class PublicUserSchema(ma.SQLAlchemyAutoSchema):
    class Meta:
        model = User
        load_instance = True
        # load_only = ("authority",)
        # include_fk = True
        exclude = ("first_name", "last_name", "password_hash", "activated", "lang_key", "image_url",
                   "reset_key", "activation_key", "created_by", "created_date", "reset_date", "last_modified_by",
                   "last_modified_date")

        getfName = auto_field("first_name")
        getlName = auto_field("last_name")


class AdminUserSchema(ma.SQLAlchemyAutoSchema):
    class Meta:
        model = User
        load_only = ("authority",)
        include_fk = True
        exclude = (
            "password_hash", "reset_key", "activation_key", "reset_date",
            "first_name",
            "last_name",
            "image_url",
            "lang_key",
            "created_by",
            "created_date",
            "last_modified_by",
            "last_modified_date"
        )

    firstName = auto_field("first_name")
    lastName = auto_field("last_name")
    imageUrl = auto_field("image_url")
    langKey = auto_field("lang_key")
    createdBy = auto_field("created_by")
    createdDate = auto_field("created_date")
    lastModifiedDate = auto_field("last_modified_date")
    lastModifiedBy = auto_field("last_modified_by")


class ManagedUserSchema(ma.SQLAlchemyAutoSchema):
    class Meta:
        model = User
        load_only = ("authority",)
        include_fk = True
        exclude = (
            "password_hash", "reset_key", "activation_key", "reset_date",
            "first_name",
            "last_name",
            "image_url",
            "lang_key",
            "created_by",
            "created_date",
            "last_modified_by",
            "last_modified_date"
        )

        firstName = auto_field("first_name")
        lastName = auto_field("last_name")
        password = auto_field("password_hash")
        imageUrl = auto_field("image_url")
        langKey = auto_field("lang_key")
        createdBy = auto_field("created_by")
        createdDate = auto_field("created_date")
        lastModifiedDate = auto_field("last_modified_date")
        lastModifiedBy = auto_field("last_modified_by")


class KeyAndPasswordSchema(ma.SQLAlchemyAutoSchema):
    class Meta:
        model = User
        exclude = (
            "password_hash", "reset_key", "activation_key", "reset_date",
            "first_name",
            "last_name",
            "image_url",
            "lang_key",
            "created_by",
            "created_date",
            "last_modified_by",
            "last_modified_date"
        )

        key = auto_field("reset_key")
        newPassword = auto_field("password_hash")