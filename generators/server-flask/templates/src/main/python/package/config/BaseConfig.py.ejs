<%#
 Copyright 2022 the original author or authors from the PyHipster project.

 This file is part of the PyHipster project, see https://github.com/pyhipster/generator-pyhipster
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>

import os
from datetime import timedelta
import tempfile


BASE_DIR = os.path.dirname(os.path.realpath(__file__))


class DevConfig:
    # Flask
    ENV = 'development'
    FLASK_ENV = 'development'
    SECRET_KEY = '<%= flaskSecret %>'
    <%_ if (authenticationTypeJwt) { _%>
    JWT_SECRET_KEY = '<%= jwtSecretKey %>'
    JWT_ALGORITHM = 'HS512'
    <%_ } else if (authenticationTypeSession) { _%>
    SESSION_KEY_PREFIX = 'pyhipster:'
    SESSION_TYPE = 'filesystem'
    SESSION_USE_SIGNER = True
    <%_ } _%>

    # Database
    <%_ if (devDatabaseTypeSQLiteAny) { _%>
    SQLALCHEMY_DATABASE_URI = 'sqlite:///<%_ if (devDatabaseTypeSQLiteDisk) { _%>../../../pyhipster.db3<%_ } _%><%_ if (devDatabaseTypeSQLiteMemory) { _%>:memory:<%_ } _%>'
    <%_ } else if (devDatabaseTypeMariadb) { _%>
    SQLALCHEMY_DATABASE_URI = 'mariadb+mariadbconnector://<user>:<password>@<host>[:<port>]/<dbname>'
    <%_ } else if (devDatabaseTypeMysql) { _%>
    SQLALCHEMY_DATABASE_URI = 'mysql+mysqlconnector://<user>:<password>@<host>[:<port>]/<dbname>'
    <%_ } else if (devDatabaseTypeMssql) { _%>
    SQLALCHEMY_DATABASE_URI = 'mssql+pyodbc://<user>:%s@<host>[:<port>]/<dbname>?driver=ODBC+Driver+17+for+SQL+Server' % quote_plus(<password>)
    <%_ } else if (devDatabaseTypeOracle) { _%>
    SQLALCHEMY_DATABASE_URI = 'oracle+cx_oracle://<user>:<password>@<host>[:<port>][/<dbname>][?service_name=<service>[&key=value&key=value...]]'
    <%_ } else if (devDatabaseTypePostgres) { _%>
    SQLALCHEMY_DATABASE_URI = 'postgresql+psycopg2://<user>:<password>@<host>[:<port>]/<dbname>[?key=value&key=value...]'
    <%_ } else if (devDatabaseTypeCockroach) { _%>
    SQLALCHEMY_DATABASE_URI = 'postgresql+psycopg2://<user>:<password>@<host>[:<port>]/<dbname>[?key=value&key=value...]'
    <%_ } _%>
    SQLALCHEMY_TRACK_MODIFICATIONS = False
    PROPAGATE_EXCEPTIONS = False
    SQLALCHEMY_EXPIRE_ON_COMMIT = False

    # Mail Configurations
    MAIL_SERVER = 'smtp.gmail.com'
    MAIL_PORT = 587
    MAIL_USE_TLS = True
    MAIL_USE_SSL = False
    MAIL_USERNAME = 'my-email-id@gmail.com'
    MAIL_PASSWORD = 'my-email-password'
    MAIL_DEFAULT_SENDER = 'my-email-id@gmail.com'

    # Cache Configurations
    <%_ if (cacheProviderSimple) { _%>
    CACHE_TYPE = "SimpleCache"
    CACHE_DEFAULT_TIMEOUT = 60
    CACHE_IGNORE_ERRORS = True
    # CACHE_THRESHOLD
    <%_ } else if (cacheProviderFileSystem) { _%>
    CACHE_TYPE = 'FileSystemCache'
    CACHE_DEFAULT_TIMEOUT = 60
    CACHE_IGNORE_ERRORS = True
    CACHE_DIR = tempfile.gettempdir()
    # CACHE_THRESHOLD
    # CACHE_OPTIONS
    <%_ } else if (cacheProviderMemcached) { _%>
    CACHE_TYPE = 'MemcachedCache'
    CACHE_DEFAULT_TIMEOUT = 60
    # CACHE_KEY_PREFIX = ''
    CACHE_MEMCACHED_SERVERS = ''
    <%_ } else if (cacheProviderRedis) { _%>
    CACHE_TYPE = 'RedisCache'
    CACHE_DEFAULT_TIMEOUT = 60
    CACHE_KEY_PREFIX = ''
    # CACHE_OPTIONS
    CACHE_REDIS_HOST = ''
    CACHE_REDIS_PORT = 6379
    CACHE_REDIS_PASSWORD = ''
    CACHE_REDIS_DB = ''
    CACHE_REDIS_URL = ''
    <%_ } _%>

class ProdConfig:
    # Flask
    ENV = 'production'
    FLASK_ENV = 'production'
    SECRET_KEY = '<%= flaskSecret %>'
    <%_ if (authenticationTypeJwt) { _%>
    JWT_SECRET_KEY = '<%= jwtSecretKey %>'
    JWT_ALGORITHM = 'HS512'
    <%_ } _%>

    # Database
    <%_ if (prodDatabaseTypeMariadb) { _%>
    SQLALCHEMY_DATABASE_URI = os.environ.get('SQLALCHEMY_DATABASE_URI', 'mariadb+mariadbconnector://<user>:<password>@<host>[:<port>]/<dbname>')
    <%_ } else if (prodDatabaseTypeMysql) { _%>
    SQLALCHEMY_DATABASE_URI = os.environ.get('SQLALCHEMY_DATABASE_URI', 'mysql+mysqlconnector://<user>:<password>@<host>[:<port>]/<dbname>')
    <%_ } else if (prodDatabaseTypeMssql) { _%>
    SQLALCHEMY_DATABASE_URI = os.environ.get('SQLALCHEMY_DATABASE_URI', 'mssql+pyodbc://<username>:<password>@<hostname>:<port>/<dbname>?driver=ODBC+Driver+17+for+SQL+Server')
    <%_ } else if (prodDatabaseTypeOracle) { _%>
    SQLALCHEMY_DATABASE_URI = os.environ.get('SQLALCHEMY_DATABASE_URI', 'oracle+cx_oracle://user:pass@hostname:port[/dbname][?service_name=<service>[&key=value&key=value...]]')
    <%_ } else if (prodDatabaseTypePostgres) { _%>
    SQLALCHEMY_DATABASE_URI = os.environ.get('SQLALCHEMY_DATABASE_URI', 'postgresql+psycopg2://user:password@host:port/dbname[?key=value&key=value...]')
    <%_ } else if (prodDatabaseTypeCockroach) { _%>
    SQLALCHEMY_DATABASE_URI = os.environ.get('SQLALCHEMY_DATABASE_URI', 'postgresql+psycopg2://user:password@host:port/dbname[?key=value&key=value...]')
    <%_ } _%>
    SQLALCHEMY_TRACK_MODIFICATIONS = os.environ.get(SQLALCHEMY_TRACK_MODIFICATIONS, False)
    PROPAGATE_EXCEPTIONS = os.environ.get(PROPAGATE_EXCEPTIONS, False)
    SQLALCHEMY_EXPIRE_ON_COMMIT = os.environ.get(SQLALCHEMY_EXPIRE_ON_COMMIT, False)

    # Mail Configurations
    MAIL_SERVER = os.environ.get('MAIL_SERVER', 'smtp.gmail.com')
    MAIL_PORT = os.environ.get(MAIL_PORT, 587)
    MAIL_USE_TLS = os.environ.get(MAIL_USE_TLS, True)
    MAIL_USE_SSL = os.environ.get(MAIL_USE_SSL, False)
    MAIL_USERNAME = os.environ.get('MAIL_USERNAME', 'my-email-id@gmail.com')
    MAIL_PASSWORD = os.environ.get('MAIL_PASSWORD', 'my-email-password')
    MAIL_DEFAULT_SENDER = os.environ.get('MAIL_DEFAULT_SENDER', 'my-email-id@gmail.com')

    # Cache Configurations
    <%_ if (cacheProviderSimple) { _%>
    CACHE_TYPE = os.environ.get("CACHE_TYPE", "SimpleCache")
    CACHE_DEFAULT_TIMEOUT = os.environ.get(CACHE_DEFAULT_TIMEOUT, 60)
    CACHE_IGNORE_ERRORS = os.environ.get(CACHE_IGNORE_ERRORS, True)
    # CACHE_THRESHOLD
    <%_ } else if (cacheProviderFileSystem) { _%>
    CACHE_TYPE = os.environ.get("CACHE_TYPE", 'FileSystemCache')
    CACHE_DEFAULT_TIMEOUT = os.environ.get(CACHE_DEFAULT_TIMEOUT, 60)
    CACHE_IGNORE_ERRORS = os.environ.get(CACHE_IGNORE_ERRORS, True)
    CACHE_DIR = os.environ.get(CACHE_DIR, tempfile.gettempdir())
    # CACHE_THRESHOLD
    # CACHE_OPTIONS
    <%_ } else if (cacheProviderMemcached) { _%>
    CACHE_TYPE = os.environ.get("CACHE_TYPE", 'MemcachedCache')
    CACHE_DEFAULT_TIMEOUT = os.environ.get(CACHE_DEFAULT_TIMEOUT, 60)
    # CACHE_KEY_PREFIX = os.environ.get("CACHE_KEY_PREFIX", '')
    CACHE_MEMCACHED_SERVERS = os.environ.get("CACHE_MEMCACHED_SERVERS", '')
    <%_ } else if (cacheProviderRedis) { _%>
    CACHE_TYPE = os.environ.get("CACHE_TYPE", 'RedisCache')
    CACHE_DEFAULT_TIMEOUT = os.environ.get(CACHE_DEFAULT_TIMEOUT, 60)
    CACHE_KEY_PREFIX = os.environ.get("CACHE_KEY_PREFIX", '')
    # CACHE_OPTIONS
    CACHE_REDIS_HOST = os.environ.get("CACHE_REDIS_HOST", '')
    CACHE_REDIS_PORT = os.environ.get(CACHE_REDIS_PORT, 6379)
    CACHE_REDIS_PASSWORD = os.environ.get("CACHE_REDIS_PASSWORD", '')
    CACHE_REDIS_DB = os.environ.get("CACHE_REDIS_DB", '')
    CACHE_REDIS_URL = os.environ.get("CACHE_REDIS_URL", '')
    <%_ } _%>
